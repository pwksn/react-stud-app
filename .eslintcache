[{"E:\\Web Development\\student-app\\src\\index.js":"1","E:\\Web Development\\student-app\\src\\reportWebVitals.js":"2","E:\\Web Development\\student-app\\src\\App.js":"3","E:\\Web Development\\student-app\\src\\Sidebar.js":"4","E:\\Web Development\\student-app\\src\\Courses\\Courses.js":"5","E:\\Web Development\\student-app\\src\\Courses\\CoursesHome.js":"6","E:\\Web Development\\student-app\\src\\hooks\\useFetch.js":"7","E:\\Web Development\\student-app\\src\\Courses\\CoursesList\\CoursesList.js":"8","E:\\Web Development\\student-app\\src\\Courses\\CourseDetails\\CourseDetails.js":"9","E:\\Web Development\\student-app\\src\\Courses\\CourseForm.js":"10","E:\\Web Development\\student-app\\src\\Courses\\CoursesList\\SemesterPicker.js":"11","E:\\Web Development\\student-app\\src\\Courses\\CoursesList\\CourseTile.js":"12","E:\\Web Development\\student-app\\src\\Courses\\CourseDetails\\CourseResources.js":"13","E:\\Web Development\\student-app\\src\\Courses\\CourseDetails\\CourseAssignments\\CourseAssignments.js":"14","E:\\Web Development\\student-app\\src\\Courses\\CourseDetails\\CourseProgress\\CourseProgress.js":"15","E:\\Web Development\\student-app\\src\\Courses\\CourseDetails\\CourseAssignments\\CourseAssignmentsForm.js":"16","E:\\Web Development\\student-app\\src\\Courses\\CourseDetails\\CourseProgress\\CourseProgressForm.js":"17","E:\\Web Development\\student-app\\src\\Home\\Home.js":"18","E:\\Web Development\\student-app\\src\\Home\\HomeCountdown\\HomeCountdown.js":"19","E:\\Web Development\\student-app\\src\\Home\\HomeCountdown\\HomeCountdownForm.js":"20","E:\\Web Development\\student-app\\src\\Home\\HomeAssignments\\HomeAssignments.js":"21","E:\\Web Development\\student-app\\src\\Home\\HomeAssignments\\HomeAssignmentTile.js":"22","E:\\Web Development\\student-app\\src\\Home\\HomeSchedule\\HomeSchedule.js":"23","E:\\Web Development\\student-app\\src\\Home\\HomeSchedule\\HomeScheduleTile.js":"24"},{"size":500,"mtime":499162500000,"results":"25","hashOfConfig":"26"},{"size":362,"mtime":499162500000,"results":"27","hashOfConfig":"26"},{"size":625,"mtime":1614111623423,"results":"28","hashOfConfig":"26"},{"size":515,"mtime":1612992980104,"results":"29","hashOfConfig":"26"},{"size":908,"mtime":1615301005911,"results":"30","hashOfConfig":"26"},{"size":3254,"mtime":1616407647944,"results":"31","hashOfConfig":"26"},{"size":1103,"mtime":1612804751846,"results":"32","hashOfConfig":"26"},{"size":1014,"mtime":1615323285607,"results":"33","hashOfConfig":"26"},{"size":4042,"mtime":1616418335276,"results":"34","hashOfConfig":"26"},{"size":9346,"mtime":1616406221292,"results":"35","hashOfConfig":"26"},{"size":740,"mtime":1614943400229,"results":"36","hashOfConfig":"37"},{"size":1017,"mtime":1615127003590,"results":"38","hashOfConfig":"26"},{"size":2395,"mtime":1612520019537,"results":"39","hashOfConfig":"26"},{"size":5012,"mtime":1615284618777,"results":"40","hashOfConfig":"26"},{"size":4139,"mtime":1614240735463,"results":"41","hashOfConfig":"26"},{"size":2156,"mtime":1615284615232,"results":"42","hashOfConfig":"26"},{"size":798,"mtime":1613930538981,"results":"43","hashOfConfig":"26"},{"size":1005,"mtime":1616406247465,"results":"44","hashOfConfig":"26"},{"size":2006,"mtime":1616406269192,"results":"45","hashOfConfig":"26"},{"size":684,"mtime":1615324470983,"results":"46","hashOfConfig":"26"},{"size":1614,"mtime":1615369326673,"results":"47","hashOfConfig":"26"},{"size":743,"mtime":1614852294821,"results":"48","hashOfConfig":"26"},{"size":4063,"mtime":1615284564419,"results":"49","hashOfConfig":"26"},{"size":669,"mtime":1615284541849,"results":"50","hashOfConfig":"26"},{"filePath":"51","messages":"52","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"53"},"1qu8vdd",{"filePath":"54","messages":"55","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"53"},{"filePath":"56","messages":"57","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"53"},{"filePath":"58","messages":"59","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"53"},{"filePath":"60","messages":"61","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"62","usedDeprecatedRules":"53"},{"filePath":"63","messages":"64","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"65","messages":"66","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"53"},{"filePath":"67","messages":"68","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"69","usedDeprecatedRules":"53"},{"filePath":"70","messages":"71","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"72","messages":"73","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"74","messages":"75","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},"14lmhqz",{"filePath":"77","messages":"78","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"53"},{"filePath":"79","messages":"80","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"53"},{"filePath":"81","messages":"82","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"83","usedDeprecatedRules":"53"},{"filePath":"84","messages":"85","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"86","usedDeprecatedRules":"53"},{"filePath":"87","messages":"88","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"53"},{"filePath":"89","messages":"90","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"53"},{"filePath":"91","messages":"92","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"93","messages":"94","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"95","messages":"96","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"53"},{"filePath":"97","messages":"98","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"99","usedDeprecatedRules":"53"},{"filePath":"100","messages":"101","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"53"},{"filePath":"102","messages":"103","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"104","usedDeprecatedRules":"53"},{"filePath":"105","messages":"106","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"53"},"E:\\Web Development\\student-app\\src\\index.js",[],["107","108"],"E:\\Web Development\\student-app\\src\\reportWebVitals.js",[],"E:\\Web Development\\student-app\\src\\App.js",[],"E:\\Web Development\\student-app\\src\\Sidebar.js",[],"E:\\Web Development\\student-app\\src\\Courses\\Courses.js",["109","110","111","112"],"import { useEffect, useState } from \"react\";\r\nimport { Route } from 'react-router-dom';\r\nimport CourseDetails from \"./CourseDetails/CourseDetails\"\r\nimport CoursesList from \"./CoursesList/CoursesList\"\r\nimport CourseForm from \"./CourseForm\";\r\nimport useFetch from \"../hooks/useFetch\";\r\nimport CoursesHome from \"./CoursesHome\";\r\n\r\nconst Courses = () => {\r\n\r\n    const [currentCourse, setCurrentCourse] = useState(null);\r\n\r\n    const setCurrentCourseCallback = (currentCourse) => {\r\n        setCurrentCourse(currentCourse);\r\n    }\r\n\r\n    return (\r\n        <div className=\"courses-box\">\r\n            <Route exact path=\"/courses/home\" render={(props) => <CoursesHome {...props} setCurrentCourse={setCurrentCourseCallback}/>}/>\r\n            <Route exact path=\"/courses/form/:id?\" render={(props) => <CourseForm {...props} currentFormCourse={currentCourse}/>}/>\r\n        </div>\r\n    );\r\n}\r\n \r\nexport default Courses;","E:\\Web Development\\student-app\\src\\Courses\\CoursesHome.js",["113","114"],"E:\\Web Development\\student-app\\src\\hooks\\useFetch.js",[],"E:\\Web Development\\student-app\\src\\Courses\\CoursesList\\CoursesList.js",["115"],"import { useState } from \"react\";\r\nimport { Link } from 'react-router-dom';\r\nimport CourseTile from \"./CourseTile\"\r\n\r\nconst CoursesList = ({ courses, setCourseSelection }) => {\r\n\r\n    const [activeCourses, setActiveCourses] = useState(courses);\r\n\r\n    const onCourseSelection = (e) => {\r\n        setCourseSelection(e);\r\n    }\r\n\r\n    return (\r\n        <div className=\"courses-list\">\r\n            <div className=\"heading\">\r\n                <h1 className=\"header-1\">Courses</h1>\r\n                <Link to=\"/courses/form\">\r\n                    <button>\r\n                        <ion-icon name=\"add-outline\" style={{color: '#fff'}}></ion-icon>\r\n                    </button>\r\n                </Link>\r\n            </div>\r\n            <div className=\"course-tiles\">\r\n                {activeCourses.map((course) => (\r\n                    <CourseTile course={course} key={course.id} setDetails={e => onCourseSelection(e)}/>\r\n                ))}\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n \r\nexport default CoursesList;","E:\\Web Development\\student-app\\src\\Courses\\CourseDetails\\CourseDetails.js",[],"E:\\Web Development\\student-app\\src\\Courses\\CourseForm.js",["116"],"E:\\Web Development\\student-app\\src\\Courses\\CoursesList\\SemesterPicker.js",[],["117","118"],"E:\\Web Development\\student-app\\src\\Courses\\CoursesList\\CourseTile.js",[],"E:\\Web Development\\student-app\\src\\Courses\\CourseDetails\\CourseResources.js",[],"E:\\Web Development\\student-app\\src\\Courses\\CourseDetails\\CourseAssignments\\CourseAssignments.js",["119"],"import { useEffect, useState } from \"react\";\r\nimport CourseAssignmentsForm from \"./CourseAssignmentsForm\";\r\n\r\nconst CourseAssignments = ({ currentCourse, onCourseAssignmentsChange }) => {\r\n\r\n    const [assignmentFormMode, setAssignmentFormMode] = useState(false);\r\n    const [assignmentsSortOrderAsc, setAssignmentsSortOrderAsc] = useState(true);\r\n\r\n    useEffect(() => {\r\n        sortCurrentCourseAssignments();\r\n    }, [currentCourse]);\r\n\r\n    const onAssignmentRemoval = (id) => {\r\n        const assignmentToRemove = currentCourse.assignments.filter(asg => asg.assignmentId === id)[0];\r\n        onCourseAssignmentsChange(currentCourse.assignments.indexOf(assignmentToRemove), 'remove');\r\n    }\r\n\r\n    const onAssignmentAdd = (assignment) => {\r\n        if(currentCourse.assignments) {\r\n            currentCourse.assignments.push(assignment);\r\n        } else {\r\n            currentCourse.assignments = [];\r\n            currentCourse.assignments.push(assignment);\r\n        }\r\n        onCourseAssignmentsChange(currentCourse, 'add');\r\n        setAssignmentFormMode(false);\r\n    }\r\n\r\n    const onAssignmentModeToggle = () => {\r\n        setAssignmentFormMode(!assignmentFormMode);\r\n    }\r\n\r\n    const sortCurrentCourseAssignments = () => {\r\n        if (currentCourse.assignments && currentCourse.assignments.length) {\r\n            const assignmentsSorted = [...currentCourse.assignments];\r\n            assignmentsSorted?.sort((a, b) => {\r\n                return new Date(a.assignmentDate).getTime() - new Date(b.assignmentDate).getTime();\r\n            });\r\n            return assignmentsSortOrderAsc ? assignmentsSorted : assignmentsSorted.reverse();\r\n        }\r\n    }\r\n\r\n    const getClassName = (assignmentType) => {\r\n        if (assignmentType === 'exam') {\r\n            return 'course-assignment-type course-assignment-type-exam';\r\n        } else if (assignmentType === 'test') {\r\n            return 'course-assignment-type course-assignment-type-test';\r\n        } else if (assignmentType === 'task') {\r\n            return 'course-assignment-type course-assignment-type-task';\r\n        } else {\r\n            return null;\r\n        }\r\n    }\r\n\r\n    return (\r\n        <div className=\"course-assignments-box\">\r\n            <div className=\"course-assignments-header d-flex\">\r\n                <div className=\"d-flex\">\r\n                    <h2 className=\"header-1\">Assignments</h2>\r\n                    {!assignmentFormMode && currentCourse.assignments && currentCourse.assignments.length > 0 && <div className=\"course-assignment-counter d-flex\">\r\n                        <p>{currentCourse.assignments.length}</p>\r\n                    </div>}\r\n                </div>\r\n                <div className=\"d-flex\">\r\n                    {!assignmentFormMode && currentCourse.assignments?.length > 1 && <button onClick={() => setAssignmentsSortOrderAsc(!assignmentsSortOrderAsc)}>\r\n                        {assignmentsSortOrderAsc && <ion-icon name=\"arrow-down-outline\"></ion-icon>}\r\n                        {!assignmentsSortOrderAsc && <ion-icon name=\"arrow-up-outline\"></ion-icon>}\r\n                    </button>}\r\n                    <button onClick={onAssignmentModeToggle}>\r\n                        {assignmentFormMode && <ion-icon name=\"close\" style={{color: '#fff'}}></ion-icon>}\r\n                        {!assignmentFormMode && <ion-icon name=\"add-outline\" style={{color: '#fff'}}></ion-icon>}\r\n                    </button>\r\n                </div>\r\n            </div>\r\n            {!assignmentFormMode && currentCourse.assignments && currentCourse.assignments.length > 0 && <div className=\"course-assignments-list\">\r\n                {sortCurrentCourseAssignments().map((assignment) => (\r\n                    <div className=\"course-assignment d-flex\" key={assignment.assignmentId}>\r\n                        <div className=\"course-assignment-info\">\r\n                            <h3>{assignment.assignmentName}</h3>\r\n                            <h4>{assignment.assignmentDate}</h4>\r\n                        </div>\r\n                        <div className={getClassName(assignment.assignmentType)}>\r\n                            <h3>{assignment.assignmentType}</h3>\r\n                        </div>\r\n                        <button className=\"course-assignment-delete\" onClick={() => onAssignmentRemoval(assignment.assignmentId)}>\r\n                            <ion-icon name=\"close\" style={{color: \"#eee\", width: '1rem', height: '1rem'}}></ion-icon>\r\n                        </button>\r\n                    </div>\r\n                ))}\r\n            </div>}\r\n\r\n            {((!assignmentFormMode && !currentCourse.assignments) || (!assignmentFormMode && currentCourse.assignments.length === 0)) && <div className=\"course-assignment-placeholder-box\">\r\n                <h2 className=\"course-assignment-placeholder\">No assignments</h2>\r\n            </div>}\r\n            \r\n            {assignmentFormMode && <CourseAssignmentsForm onAssignmentAdd={onAssignmentAdd}/>}\r\n        </div>\r\n    );\r\n}\r\n \r\nexport default CourseAssignments;","E:\\Web Development\\student-app\\src\\Courses\\CourseDetails\\CourseProgress\\CourseProgress.js",["120"],"import { useEffect, useState } from 'react';\r\nimport { CircleProgress } from 'react-gradient-progress';\r\nimport CourseProgressForm from './CourseProgressForm';\r\n\r\nconst calculateRemToPx = (rem) => {\r\n    return rem * parseFloat(getComputedStyle(document.documentElement).fontSize);\r\n}\r\n\r\nconst CourseProgress = ({ currentCourse, onCourseAssignmentsChange }) => {\r\n\r\n    const [progressFormMode, setProgressFormMode] = useState(false);\r\n    const [pointsEarned, setPointsEarned] = useState(0);\r\n    const [pointsPossible, setPointsPossible] = useState(1); // to prevent 0:0 -> NaN in CircleProgress\r\n    const pointsPercentage = +((currentCourse.pointsEarned / currentCourse.pointsPossible) * 100).toPrecision(2);\r\n    \r\n\r\n    useEffect(() => {\r\n        setPointsEarned(currentCourse?.pointsEarned);\r\n        setPointsPossible(currentCourse?.pointsPossible);\r\n        calculateGrade();\r\n    }, [currentCourse]);\r\n\r\n    const onProgressModeToggle = () => {\r\n        setPointsEarned(currentCourse?.pointsEarned);\r\n        setPointsPossible(currentCourse?.pointsPossible);\r\n        setProgressFormMode(!progressFormMode);\r\n    }\r\n\r\n    const handleSubmit = (e) => {\r\n        e.preventDefault();\r\n        currentCourse.pointsEarned = +pointsEarned;\r\n        currentCourse.pointsPossible = +pointsPossible;\r\n        onCourseAssignmentsChange(currentCourse, 'add');\r\n        setProgressFormMode(false);\r\n    }\r\n\r\n    const calculateGrade = () => {\r\n        if (pointsPercentage < 50) {\r\n            return 2.0;\r\n        } else if (pointsPercentage >= 50 && pointsPercentage < 60) {\r\n            return 3.0;\r\n        } else if (pointsPercentage >= 60 && pointsPercentage < 70) {\r\n            return 3.5;\r\n        } else if (pointsPercentage >= 70 && pointsPercentage < 80) {\r\n            return 4.0;\r\n        } else if (pointsPercentage >= 80 && pointsPercentage < 90) {\r\n            return 4.5;\r\n        } else if (pointsPercentage >= 90) {\r\n            return 5.0;\r\n        }\r\n    }\r\n    \r\n    return (\r\n        <div className=\"course-progress-box\">\r\n            <div className=\"course-progress-header d-flex\">\r\n                <h2 className=\"header-1\">Progress</h2>\r\n                <button onClick={onProgressModeToggle}>\r\n                    {progressFormMode && <ion-icon name=\"close\" style={{color: '#fff'}}></ion-icon>}\r\n                    {!progressFormMode && <ion-icon name=\"pencil-outline\" style={{color: '#fff'}}></ion-icon>}\r\n                </button>\r\n            </div>\r\n            {!progressFormMode && currentCourse.pointsPossible > 0 && <div className=\"course-progress-info\">\r\n                <div className=\"course-progress-bar\">\r\n                    <CircleProgress \r\n                        percentage={pointsPercentage}\r\n                        width={calculateRemToPx(20)}\r\n                        strokeWidth={15}\r\n                        fontSize={'3rem'}\r\n                        fontColor={'#333'}\r\n                        primaryColor={['#222C67', '#222C67']}\r\n                        secondaryColor={'#bdc0d1'}\r\n                    />\r\n\r\n                    <div className=\"course-progress-points\">\r\n                        <h3>{currentCourse.pointsEarned}/{currentCourse.pointsPossible}</h3>\r\n                    </div>\r\n                </div>\r\n                <div className=\"course-progress-data\">\r\n                    <div className=\"course-progress-grade\">\r\n                        <h2>{calculateGrade()}</h2>\r\n                        <p>Projected grade</p>\r\n                    </div>\r\n                </div>\r\n            </div>}\r\n            {!progressFormMode && !currentCourse.pointsPossible && <div className=\"course-progress-empty\">\r\n                <h2>No progress yet</h2>\r\n            </div>}\r\n            {progressFormMode && \r\n            <CourseProgressForm \r\n                pointsEarned={pointsEarned} \r\n                pointsPossible={pointsPossible} \r\n                setPointsEarned={setPointsEarned}\r\n                setPointsPossible={setPointsPossible}\r\n                handleSubmit={handleSubmit}\r\n            />}\r\n            \r\n        </div>\r\n    );\r\n}\r\n \r\nexport default CourseProgress;","E:\\Web Development\\student-app\\src\\Courses\\CourseDetails\\CourseAssignments\\CourseAssignmentsForm.js",[],"E:\\Web Development\\student-app\\src\\Courses\\CourseDetails\\CourseProgress\\CourseProgressForm.js",[],"E:\\Web Development\\student-app\\src\\Home\\Home.js",[],"E:\\Web Development\\student-app\\src\\Home\\HomeCountdown\\HomeCountdown.js",[],"E:\\Web Development\\student-app\\src\\Home\\HomeCountdown\\HomeCountdownForm.js",[],"E:\\Web Development\\student-app\\src\\Home\\HomeAssignments\\HomeAssignments.js",["121","122"],"import { useEffect, useState } from \"react\";\r\nimport HomeAssignmentTile from \"./HomeAssignmentTile\";\r\n\r\nconst HomeAssignments = ({ courses }) => {\r\n\r\n    const [allAssignments, setAllAssignments] = useState([]);\r\n\r\n    useEffect(() => {\r\n        getAllAssignments();\r\n    }, [courses]);\r\n\r\n    const getAllAssignments = () => {\r\n        const assignments = [];\r\n        const today = new Date();\r\n\r\n        courses?.map(course => (\r\n            course.assignments?.map(assignment => (\r\n                assignment.assignmentCourse = course.name,\r\n                assignments.push(assignment)\r\n            ))\r\n        ));\r\n\r\n        if (assignments.length) {\r\n            const assignmentsFiltered = assignments.filter(assignment => {\r\n                const adiff = Date.parse(assignment.assignmentDate) - today.getTime();\r\n                return adiff > 0;\r\n            });\r\n            setAllAssignments(assignmentsFiltered);\r\n        }\r\n    }\r\n\r\n    return (\r\n        <div className=\"home-assignments-box\">\r\n            <h2 className=\"header-1\">Assignments</h2>\r\n            <div className=\"home-assignments-list\">\r\n                {courses && \r\n                allAssignments\r\n                    .sort((a, b) => {\r\n                    return new Date(a.assignmentDate).getTime() - new Date(b.assignmentDate).getTime();\r\n                    })\r\n                    .map(assignment => (\r\n                        <HomeAssignmentTile assignment={assignment} key={assignment.assignmentId}/>\r\n                    )\r\n                )}\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n \r\nexport default HomeAssignments;","E:\\Web Development\\student-app\\src\\Home\\HomeAssignments\\HomeAssignmentTile.js",[],"E:\\Web Development\\student-app\\src\\Home\\HomeSchedule\\HomeSchedule.js",["123"],"import { useEffect, useState } from \"react\";\r\nimport HomeScheduleTile from \"./HomeScheduleTile\";\r\n\r\nconst HomeSchedule = ({ courses }) => {\r\n\r\n    const date = new Date();\r\n    const weekdays = ['Sun', 'Mon', 'Tue', 'Wed', 'Thu', 'Fri', 'Sat'];\r\n\r\n    const [activeWeekday, setActiveWeekday] = useState(date.getDay());\r\n\r\n    useEffect(() => {\r\n        sortCoursesByDay();\r\n    }, [activeWeekday]);\r\n\r\n    const sortCoursesByDay = () => {\r\n        if (courses) {\r\n            const lecturesSorted = courses.filter(course => course.lecture.lectureDay === weekdays[activeWeekday]);\r\n            const labsSorted = courses.filter(course => course.lab.labDay === weekdays[activeWeekday]);\r\n            sortCoursesByHour(lecturesSorted, 'lecture');\r\n            sortCoursesByHour(labsSorted, 'lab');\r\n            return [lecturesSorted, labsSorted];\r\n        }\r\n    }\r\n\r\n    const sortCoursesByHour = (courses, type) => {\r\n        courses.sort((a, b) => {\r\n            return(getCourseStartHour(a, type) - getCourseStartHour(b, type));\r\n        })\r\n    }\r\n\r\n    const getCourseStartHour = (course, type) => {\r\n        if (type === 'lecture') {\r\n            const courseHour = course.lecture.lectureHour.split(\":\").join(\"\");\r\n            return courseHour;\r\n        } else {\r\n            const courseHour = course.lab.labHour.split(\":\").join(\"\");\r\n            return courseHour; \r\n        }\r\n    }\r\n\r\n    return (\r\n        <div className=\"home-schedule-box\">\r\n            <h2>Schedule</h2>\r\n            <div className=\"home-schedule-content\">\r\n                <div className=\"home-schedule-daypicker\">\r\n                    <button className={`${activeWeekday === 1 ? \"picker-button-active\" : \"\"}`} value={1} onClick={() => setActiveWeekday(1)}>Mon</button>\r\n                    <button className={`${activeWeekday === 2 ? \"picker-button-active\" : \"\"}`} value={2} onClick={() => setActiveWeekday(2)}>Tue</button>\r\n                    <button className={`${activeWeekday === 3 ? \"picker-button-active\" : \"\"}`} value={3} onClick={() => setActiveWeekday(3)}>Wed</button>\r\n                    <button className={`${activeWeekday === 4 ? \"picker-button-active\" : \"\"}`} value={4} onClick={() => setActiveWeekday(4)}>Thu</button>\r\n                    <button className={`${activeWeekday === 5 ? \"picker-button-active\" : \"\"}`} value={5} onClick={() => setActiveWeekday(5)}>Fri</button>\r\n                    <button className={`${activeWeekday === 6 ? \"picker-button-active\" : \"\"}`} value={6} onClick={() => setActiveWeekday(6)}>Sat</button>\r\n                    <button className={`${activeWeekday === 0 ? \"picker-button-active\" : \"\"}`} value={0} onClick={() => setActiveWeekday(0)}>Sun</button>\r\n                </div>\r\n\r\n                <div className=\"home-schedule-day\">\r\n                    <div className=\"home-schedule-day-lectures\">\r\n                        <h3>Lectures</h3>\r\n                        {\r\n                            courses && sortCoursesByDay()[0].map(course => (\r\n                                <div className=\"home-schedule-day-tile\" key={course.lab.labDay + course.lab.labHour + course.lecture.lectureDay + course.lecture.lectureHour}>\r\n                                    <HomeScheduleTile course={course} type=\"lecture\"/>\r\n                                </div>\r\n                            ))\r\n                        }\r\n                    </div>\r\n\r\n                    <div className=\"home-schedule-day-labs\">\r\n                        <h3>Labs</h3>\r\n                        {\r\n                            courses && sortCoursesByDay()[1].map(course => (\r\n                                <div className=\"home-schedule-day-tile\" key={course.lab.labDay + course.lab.labHour + course.lecture.lectureDay + course.lecture.lectureHour}>\r\n                                    <HomeScheduleTile course={course} type=\"lab\"/>\r\n                                </div>\r\n                            ))\r\n                        }\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n \r\nexport default HomeSchedule;","E:\\Web Development\\student-app\\src\\Home\\HomeSchedule\\HomeScheduleTile.js",[],{"ruleId":"124","replacedBy":"125"},{"ruleId":"126","replacedBy":"127"},{"ruleId":"128","severity":1,"message":"129","line":1,"column":10,"nodeType":"130","messageId":"131","endLine":1,"endColumn":19},{"ruleId":"128","severity":1,"message":"132","line":3,"column":8,"nodeType":"130","messageId":"131","endLine":3,"endColumn":21},{"ruleId":"128","severity":1,"message":"133","line":4,"column":8,"nodeType":"130","messageId":"131","endLine":4,"endColumn":19},{"ruleId":"128","severity":1,"message":"134","line":6,"column":8,"nodeType":"130","messageId":"131","endLine":6,"endColumn":16},{"ruleId":"128","severity":1,"message":"135","line":11,"column":12,"nodeType":"130","messageId":"131","endLine":11,"endColumn":23},{"ruleId":"136","severity":1,"message":"137","line":24,"column":8,"nodeType":"138","endLine":24,"endColumn":19,"suggestions":"139"},{"ruleId":"128","severity":1,"message":"140","line":7,"column":27,"nodeType":"130","messageId":"131","endLine":7,"endColumn":43},{"ruleId":"136","severity":1,"message":"141","line":36,"column":8,"nodeType":"138","endLine":36,"endColumn":12,"suggestions":"142"},{"ruleId":"124","replacedBy":"143"},{"ruleId":"126","replacedBy":"144"},{"ruleId":"136","severity":1,"message":"145","line":11,"column":8,"nodeType":"138","endLine":11,"endColumn":23,"suggestions":"146"},{"ruleId":"136","severity":1,"message":"147","line":21,"column":8,"nodeType":"138","endLine":21,"endColumn":23,"suggestions":"148"},{"ruleId":"136","severity":1,"message":"149","line":10,"column":8,"nodeType":"138","endLine":10,"endColumn":17,"suggestions":"150"},{"ruleId":"151","severity":1,"message":"152","line":18,"column":58,"nodeType":"153","messageId":"154","endLine":18,"endColumn":59},{"ruleId":"136","severity":1,"message":"155","line":13,"column":8,"nodeType":"138","endLine":13,"endColumn":23,"suggestions":"156"},"no-native-reassign",["157"],"no-negated-in-lhs",["158"],"no-unused-vars","'useEffect' is defined but never used.","Identifier","unusedVar","'CourseDetails' is defined but never used.","'CoursesList' is defined but never used.","'useFetch' is defined but never used.","'requestData' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'courses' and 'history'. Either include them or remove the dependency array.","ArrayExpression",["159"],"'setActiveCourses' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'setEditedCourseData'. Either include it or remove the dependency array.",["160"],["157"],["158"],"React Hook useEffect has a missing dependency: 'sortCurrentCourseAssignments'. Either include it or remove the dependency array.",["161"],"React Hook useEffect has a missing dependency: 'calculateGrade'. Either include it or remove the dependency array.",["162"],"React Hook useEffect has a missing dependency: 'getAllAssignments'. Either include it or remove the dependency array.",["163"],"no-sequences","Unexpected use of comma operator.","SequenceExpression","unexpectedCommaExpression","React Hook useEffect has a missing dependency: 'sortCoursesByDay'. Either include it or remove the dependency array.",["164"],"no-global-assign","no-unsafe-negation",{"desc":"165","fix":"166"},{"desc":"167","fix":"168"},{"desc":"169","fix":"170"},{"desc":"171","fix":"172"},{"desc":"173","fix":"174"},{"desc":"175","fix":"176"},"Update the dependencies array to be: [courses, history, isPending]",{"range":"177","text":"178"},"Update the dependencies array to be: [id, setEditedCourseData]",{"range":"179","text":"180"},"Update the dependencies array to be: [currentCourse, sortCurrentCourseAssignments]",{"range":"181","text":"182"},"Update the dependencies array to be: [calculateGrade, currentCourse]",{"range":"183","text":"184"},"Update the dependencies array to be: [courses, getAllAssignments]",{"range":"185","text":"186"},"Update the dependencies array to be: [activeWeekday, sortCoursesByDay]",{"range":"187","text":"188"},[902,913],"[courses, history, isPending]",[1448,1452],"[id, setEditedCourseData]",[421,436],"[currentCourse, sortCurrentCourseAssignments]",[893,908],"[calculateGrade, currentCourse]",[275,284],"[courses, getAllAssignments]",[381,396],"[activeWeekday, sortCoursesByDay]"]